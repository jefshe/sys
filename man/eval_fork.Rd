% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fork.R
\name{eval_fork}
\alias{eval_fork}
\title{Evaluate in fork}
\usage{
eval_fork(expr, envir = parent.frame(), tmp = tempfile("fork"),
  timeout = 60, std_out = stdout(), std_err = stderr())
}
\arguments{
\item{expr}{expression to evaluate}

\item{envir}{the \link{environment} in which expr is to be evaluated}

\item{tmp}{the value of \link{tempdir} inside the forked process}

\item{timeout}{maximum time in seconds to allow for call to return}

\item{std_out}{if and where to direct child process \code{STDOUT}. Must be one of
\code{TRUE}, \code{FALSE}, filename, connection object or callback function. See section
on \emph{Output Streams} below for details.}

\item{std_err}{if and where to direct child process \code{STDERR}. Must be one of
\code{TRUE}, \code{FALSE}, filename, connection object or callback function. See section
on \emph{Output Streams} below for details.}
}
\description{
Version of \link{eval} which evaluates expression in a temporary fork so
that it has no side effects on the main R session.
Basically a robust version of \code{mccollect(mcparallel(expr))}.
Not available on Windows because it required \code{fork()}.
}
