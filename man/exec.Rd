% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exec.R
\name{exec}
\alias{exec}
\alias{exec_wait}
\alias{sys}
\alias{exec_background}
\title{Run a system command}
\usage{
exec_wait(cmd, args = NULL, std_out = stdout(), std_err = stderr())

exec_background(cmd, args = NULL, std_out = TRUE, std_err = TRUE)
}
\arguments{
\item{cmd}{the command to run. Eiter a full path or the name of a program
which exists in the \code{PATH}.}

\item{args}{character vector of arguments to pass}

\item{std_out}{filename to redirect program \code{STDOUT} stream. For \code{exec_wait} this may
also be a connection or callback function.}

\item{std_err}{filename to redirect program \code{STDERR} stream. For \code{exec_wait} this may
also be a connection or callback function.}
}
\description{
Flexible replacements for \link{system2} / \link{pipe} with support for interruptions,
background tasks and proper control over \code{stdout} / \code{stderr} streams.
}
\details{
The \code{exec_wait} function runs a system command and waits for the child process
to exit. The \code{STDOUT} and \code{STDERR} streams are piped back to the parent process
and available as a connection or callback funtion. If the child process completes
normally (either success or error) \code{exec_wait} returns the program exit code.
On the other hand, when the child process is terminated by a SIGNAL, an error is
raised in R. The R user can interrupt the program by sending SIGINT (press
ESC or CTRL+C) in which case the child process tree is properly terminated.

The \code{exec_background} function starts the program and immediately returns the
PID of the child process. Because this is non-blocking, \code{std_out} and \code{std_out}
can only be \code{NULL} or a file path. The state of the process is not controlled by
R but the child can be killed manually with \link[tools:pskill]{tools::pskill}. This is useful for
running a server daemon or background process.
}
\seealso{
Base \link{system2} and \link{pipe} provide other methods for running a system
command with output.
}
